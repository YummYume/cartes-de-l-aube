services:
  api:
    build:
      context: .
      dockerfile: docker/prod/api/Dockerfile
    depends_on:
      mongodb:
        condition: service_healthy
      mariadb:
        condition: service_healthy
    restart: unless-stopped
    environment:
      ENV: "production"
      NODE_ENV: "production"
      MARIADB_DATABASE: "${MARIADB_DATABASE:?err}"
      MARIADB_USERNAME: "${MARIADB_ROOT_USERNAME:?err}"
      MARIADB_PASSWORD: "${MARIADB_ROOT_PASSWORD:?err}"
      MARIADB_HOST: "mariadb"
      MARIADB_PORT: 3306
      MONGODB_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:?err}"
      MONGODB_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:?err}"
      MONGODB_HOST: "mongodb"
      SECRET: "${SECRET:?err}"
      DOMAIN_API: "${DOMAIN_API:?err}"
    container_name: vue-game-api
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:3000/healthz || exit 1
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s
    networks:
      webserver:
        aliases:
          - cartes-api
      mongodb:
      mariadb:

  front:
    build:
      context: .
      dockerfile: docker/prod/front/Dockerfile
    depends_on:
      api:
        condition: service_healthy
    restart: unless-stopped
    container_name: vue-game-front
    networks:
      webserver:
        aliases:
          - cartes-front

  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGO_INITDB_ROOT_USERNAME:?err}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGO_INITDB_ROOT_PASSWORD:?err}"
    volumes:
      - ./data/db:/data/db
    container_name: vue-game-mongodb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/ping --quiet
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s
    networks:
      - mongodb

  mariadb:
    image: mariadb:10.10.2
    restart: unless-stopped
    container_name: vue-game-mariadb
    volumes:
      - ./data/mysql:/var/lib/mysql
    environment:
      MARIADB_ROOT_PASSWORD: "${MARIADB_ROOT_PASSWORD:?err}"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 20s
      retries: 5
      start_period: 60s
    networks:
      - mariadb

networks:
  webserver:
    external: true
  mongodb:
  mariadb:
